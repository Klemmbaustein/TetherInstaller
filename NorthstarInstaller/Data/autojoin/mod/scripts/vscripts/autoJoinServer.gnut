global function joinFromConvar

void function joinFromConvar()
{
    thread joinFromConvarThread()
}

bool function ShouldWeConnect()
{
    string Serv
	try
    {
    Serv = GetConVarString("autoJoinServer")
    }
    catch(a)
    {
        print("autoJoinServer is not set, or is not a string")
        print(a)
        return false
    }

    if( Serv == "none" )
    {
		print("autoJoinServer is set to none")
		return false
    }
    if( Serv == "" )
    {
		print("autoJoinServer is set to an empty string")
		return false
	}

	print( "We should connect to the server" )
	return true
}

void function DisplayLoadingDialog(string Title, string Description)
{
	CloseAllDialogs()
	DialogData dialogData
	dialogData.showSpinner = true
	dialogData.header = Title
	dialogData.message = Description

	AddDialogFooter( dialogData, "#A_BUTTON_SELECT" )

	OpenDialog( dialogData )
}

void function joinFromConvarThread()
{
	float time = Time()

	while (time + 3 > Time())
	{
		WaitFrame()
	}

	if ( !ShouldWeConnect() )
	{
		return
	}
	DisplayLoadingDialog("#CONNECTING", "#DIALOG_AUTHENTICATING_MASTERSERVER");

    while ( GetConVarInt( "ns_has_agreed_to_send_token" ) != NS_AGREED_TO_SEND_TOKEN || time + 15.0 > Time() )
	{
		if ( ( NSIsMasterServerAuthenticated() && IsStryderAuthenticated() ) || GetConVarBool( "ns_auth_allow_insecure" ) )
			break
			
		WaitFrame()
	}



    connectFromConvar()
}

void function connectFromConvar()
{
   	DisplayLoadingDialog("#CONNECTING", "Connecting to server");
	string Serv
    try
    {
    Serv = GetConVarString("autoJoinServer")
    }
    catch(a)
    {
        print("autoJoinServer is not set, or is not a string")
        print(a)
        return
    }

	NSRequestServerList()

	while ( NSIsRequestingServerList() )
	{
		WaitFrame() 
	}
	
	int TargetID
	
	int i = 0

	foreach ( s in NSGetGameServers() )
	{
		if (s.id == Serv)
		{
			TargetID = i
		}
		i++
	}

	NSTryAuthWithServer( TargetID, "" )

	while ( NSIsAuthenticatingWithServer() )
	{
		WaitFrame()
	}

	if ( NSWasAuthSuccessful() )
	{
		NSConnectToAuthedServer()
	}
	else
	{
		string reason = NSGetAuthFailReason()

		DialogData dialogData
		dialogData.header = "#ERROR"
		dialogData.message = reason
		dialogData.image = $"ui/menu/common/dialog_error"

		#if PC_PROG
			AddDialogButton( dialogData, "#DISMISS" )

			AddDialogFooter( dialogData, "#A_BUTTON_SELECT" )
		#endif // PC_PROG
		AddDialogFooter( dialogData, "#B_BUTTON_DISMISS_RUI" )

		OpenDialog( dialogData )
	}
	SetConVarString( "autoJoinServer", "" )
}

bool function IsStryderAuthenticated()
{
	return GetConVarInt( "mp_allowed" ) != -1
}