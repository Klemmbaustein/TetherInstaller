# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  write-all

jobs:
  Build-Windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Checkout submodules
      run: git submodule update --init --recursive
      
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run:  |
        ./Setup.ps1 && msbuild TetherInstaller.sln /p:Configuration=Release /p:Platform=x64 /p:CI_BUILD=${{ github.run_number }}
    - name: upload artifact
      uses: actions/upload-artifact@v3
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        path: ${{ github.workspace }}/Release
        name: Tether-Windows-Build-${{ github.run_number }}.zip
  Build-Linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: install dependencies
      run: |
          sudo apt-get install libsdl2-2.0-0
          sudo apt-get install libsdl2-dev
          sudo apt-get install libglew-dev
          sudo apt-get install libcurl4-openssl-dev
          cd KlemmUI
          make
          sudo make install
          cd ..
    - name: build
      run: |
          cd NorthstarInstaller
          make BUILD_ID=${{ github.run_number }}
    - name: make-release
      run: |
          mkdir Release
          cp -rf NorthstarInstaller/Data Release/Data
          cp -rf NorthstarInstaller/Shaders Release/Shaders
          cp -rf NorthstarInstaller/TetherInstaller Release/TetherInstaller
    - name: upload artifact
      uses: actions/upload-artifact@v3
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        path: Release
        name: Tether-Linux-Build-${{ github.run_number }}.zip

  Release:
    runs-on: ubuntu-latest
    needs: [Build-Windows, Build-Linux]
    steps:
    - name: Retrieve Release Artifacts
      uses: actions/download-artifact@v2
      with:
        path: Release

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        names: |
          Tether-Windows-Build-${{ github.run_number }}.zip
          Tether-Linux-Build-${{ github.run_number }}.zip
        token: ${{ github.token }}
        generate_release_notes: true
        name: CI-Build-${{ github.run_number }}
